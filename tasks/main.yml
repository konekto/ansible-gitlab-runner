---

- debug:
    var: "{{ item }}"
  loop:
    - gitlab_url
    - gitlab_runner_token
    - gitlab_runner_description
    - gitlab_runner_tag
    - gitlab_runner_locked


- fail:
    msg: Please provide all required variables
  when: not gitlab_url or not gitlab_runner_token or not gitlab_runner_description or not gitlab_runner_tag

- name: "Ensure runner is not registered already"
  stat:
    path: /srv/gitlab-runner/config/config.toml
  register: conf
  become: true

- name: Ensure gitlab runner is running
  docker_container:
    image: gitlab/gitlab-runner
    name: gitlab-runner
    detach: true
    restart_policy: always
    state: started
    volumes:
    - /srv/gitlab-runner/config:/etc/gitlab-runner
    - /var/run/docker.sock:/var/run/docker.sock
  when: not conf.stat.exists

- name: Register a new gitlab runner
  docker_container:
    image: gitlab/gitlab-runner
    name: gitlab-runner-register
    state: started
    auto_remove: true
    volumes:
    - /srv/gitlab-runner/config:/etc/gitlab-runner
    command: "register --non-interactive --executor \"docker\" --docker-image docker:latest --url \"{{gitlab_url}}\" --registration-token \"{{gitlab_runner_token}}\" --description \"{{gitlab_runner_description}}\" --tag-list \"{{gitlab_runner_tag}}\" --locked=\"{{gitlab_runner_locked}}\""
  when: not conf.stat.exists

- name: Ensure the Docker socket is in the Gitlab Runner config section as volume definied
  lineinfile:
    line: '    volumes = ["/cache", "/var/run/docker.sock:/var/run/docker.sock"]'
    regexp: volumes
    path: /srv/gitlab-runner/config/config.toml
  become: true
  when: not conf.stat.exists
